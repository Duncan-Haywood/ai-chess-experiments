name: chess-bot

services:
  # Chess bot - local mode
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
      target: development  # Use development stage
    volumes:
      - ./backend:/app:delegated  # Mount source code for development
      - backend-cache:/root/.cache  # Cache pip/poetry
      - /app/.venv  # Don't sync virtualenv
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1  # Don't write .pyc files
      - BOT_MODE=local
      - POETRY_VIRTUALENVS_CREATE=false
      - POETRY_CACHE_DIR=/root/.cache/poetry
      - POETRY_VIRTUALENVS_PATH=/app/.venv
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
    restart: unless-stopped
    develop:
      watch:
        - action: sync
          path: ./backend
          target: /app
          ignore:
            - .pytest_cache/
            - __pycache__/
            - *.pyc
        - action: rebuild
          path: ./backend/pyproject.toml

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development  # Use development stage
    volumes:
      - ./frontend:/app:delegated  # Mount source code for development
      - frontend-cache:/root/.yarn  # Cache yarn packages
      - /app/node_modules  # Don't sync node_modules
    ports:
      - "5173:5173"  # Vite dev server port
    environment:
      - VITE_API_URL=http://backend:8000
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    restart: unless-stopped
    develop:
      watch:
        - action: sync
          path: ./frontend/src
          target: /app/src
          ignore:
            - node_modules/
            - dist/
        - action: rebuild
          path: ./frontend/package.json

volumes:
  backend-cache:
  frontend-cache:

# Production configuration
---
name: chess-bot-prod

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    environment:
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=DEBUG
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
      restart_policy:
        condition: on-failure
        max_attempts: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
      restart_policy:
        condition: on-failure
        max_attempts: 3 